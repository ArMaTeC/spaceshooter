!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("babylonjs")):"function"==typeof define&&define.amd?define("babylonjs-serializers",["babylonjs"],e):"object"==typeof exports?exports["babylonjs-serializers"]=e(require("babylonjs")):t.SERIALIZERS=e(t.BABYLON)}("undefined"!=typeof self?self:"undefined"!=typeof global?global:this,(t=>(()=>{"use strict";var e={597:e=>{e.exports=t}},n={};function a(t){var o=n[t];if(void 0!==o)return o.exports;var r=n[t]={exports:{}};return e[t](r,r.exports,a),r.exports}a.d=(t,e)=>{for(var n in e)a.o(e,n)&&!a.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),a.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};a.d(o,{default:()=>_});var r={};a.r(r),a.d(r,{USDZExportAsync:()=>C});var c={};a.r(c),a.d(c,{USDZExportAsync:()=>C});var i=function(){return i=Object.assign||function(t){for(var e,n=1,a=arguments.length;n<a;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t},i.apply(this,arguments)};Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var s=a(597);function u(t,e,n){void 0===n&&(n=3);for(var a=[],o=0;o<t.length/n;o++){var r=t[o*n],c=t[o*n+1],i=t[o*n+2];a.push("(".concat(r.toPrecision(e.precision),", ").concat(c.toPrecision(e.precision),", ").concat(i.toPrecision(e.precision),")"))}return a.join(", ")}function l(t,e){for(var n=[],a=0;a<t.length/2;a++){var o=t[2*a],r=t[2*a+1];n.push("(".concat(o.toPrecision(e.precision),", ").concat((1-r).toPrecision(e.precision),")"))}return n.join(", ")}function p(t,e){var n=function(t,e){var n=t.getVerticesData(s.VertexBuffer.PositionKind),a=t.getVerticesData(s.VertexBuffer.NormalKind);if(n&&a)return'\n\tdef Mesh "'.concat("Geometry",'"\n\t{\n\t\tint[] faceVertexCounts = [').concat(function(t){var e,n=(null===(e=t.getIndices())||void 0===e?void 0:e.length)?t.getTotalIndices():t.getTotalVertices();return Array(n/3).fill(3).join(", ")}(t),"]\n\t\tint[] faceVertexIndices = [").concat(function(t){var e=t.getIndices(),n=[];if(null!==e)for(var a=0;a<e.length;a++)n.push(e[a]);else{var o=t.getTotalVertices();for(a=0;a<o;a++)n.push(a)}return n.join(", ")}(t),"]\n\t\tnormal3f[] normals = [").concat(u(a,e),'] (\n\t\t\tinterpolation = "vertex"\n\t\t)\n\t\tpoint3f[] points = [').concat(u(n,e),"]\n        ").concat(function(t,e){for(var n="",a=0;a<4;a++){var o=a>0?a:"",r=t.getVerticesData(s.VertexBuffer.UVKind+(o?o+1:""));r&&(n+="\n\t\ttexCoord2f[] primvars:st".concat(o," = [").concat(l(r,e),'] (\n\t\t\tinterpolation = "vertex"\n\t\t)'))}var c=t.getVerticesData(s.VertexBuffer.ColorKind);return c&&(n+="\n\tcolor3f[] primvars:displayColor = [".concat(u(c,e,c.length/t.getTotalVertices()),'] (\n\t\tinterpolation = "vertex"\n\t\t)')),n}(t,e),'\n\t\tuniform token subdivisionScheme = "none"\n\t}\n')}(t,e);return'\n        def "Geometry"\n        {\n        '.concat(n,"\n        }\n        ")}function f(t){var e='#usda 1.0\n    (\n        customLayerData = {\n            string creator = "Babylon.js USDZExportAsync"\n        }\n        defaultPrim = "Root"\n        metersPerUnit = 1\n        upAxis = "Y"\n    )';return e+=t,fflate.strToU8(e)}function d(t){var e=t.m;return"( ".concat(h(e,0),", ").concat(h(e,4),", ").concat(h(e,8),", ").concat(h(e,12)," )")}function h(t,e){return"(".concat(t[e+0],", ").concat(t[e+1],", ").concat(t[e+2],", ").concat(t[e+3],")")}function m(t){var e="Object_"+t.uniqueId,n=t.getWorldMatrix().clone();n.determinant()<0&&s.Tools.Warn("Exporting mesh ".concat(t.name," with negative scale. Result may look incorrect in destination engine."));var a=d(n);return'def Xform "'.concat(e,'" (\n\tprepend references = @./geometries/Geometry_').concat(t.geometry.uniqueId,'.usda@</Geometry>\n\tprepend apiSchemas = ["MaterialBindingAPI"]\n)\n{\n\tmatrix4d xformOp:transform = ').concat(a,'\n\tuniform token[] xformOpOrder = ["xformOp:transform"]\t\n\n    rel material:binding = </Materials/Material_').concat(t.material.uniqueId,">\n}\n\n")}function g(t){switch(t){case s.Constants.TEXTURE_CLAMP_ADDRESSMODE:return"clamp";case s.Constants.TEXTURE_MIRROR_ADDRESSMODE:return"mirror";case s.Constants.TEXTURE_WRAP_ADDRESSMODE:default:return"repeat"}}function M(t){return"(".concat(t.x,", ").concat(t.y,")")}function x(t){return"(".concat(t.r,", ").concat(t.g,", ").concat(t.b,")")}function v(t,e,n,a,o,r){var c=t.getInternalTexture().uniqueId+"_"+t.invertY;o[c]=t;var i=t.coordinatesIndex>0?"st"+t.coordinatesIndex:"st",u=new s.Vector2(t.uScale,t.vScale),l=new s.Vector2(t.uOffset,t.vOffset),p=t.wAng,f=Math.sin(p),d=Math.cos(p);return l.y=1-l.y-u.y,l.x+=f*u.x,l.y+=(1-d)*u.y,'\n    def Shader "PrimvarReader_'.concat(n,'"\n    {\n        uniform token info:id = "UsdPrimvarReader_float2"\n        float2 inputs:fallback = (0.0, 0.0)\n        token inputs:varname = "').concat(i,'"\n        float2 outputs:result\n    }\n\n    def Shader "Transform2d_').concat(n,'"\n    {\n        uniform token info:id = "UsdTransform2d"\n        token inputs:in.connect = </Materials/Material_').concat(e.uniqueId,"/PrimvarReader_").concat(n,".outputs:result>\n        float inputs:rotation = ").concat((p*(180/Math.PI)).toFixed(r.precision),"\n        float2 inputs:scale = ").concat(M(u),"\n        float2 inputs:translation = ").concat(M(l),'\n        float2 outputs:result\n    }\n\n    def Shader "Texture_').concat(t.uniqueId,"_").concat(n,'"\n    {\n        uniform token info:id = "UsdUVTexture"\n        asset inputs:file = @textures/Texture_').concat(c,".png@\n        float2 inputs:st.connect = </Materials/Material_").concat(e.uniqueId,"/Transform2d_").concat(n,".outputs:result>\n        ").concat(a?"float4 inputs:scale = "+function(t){return"(".concat(t.r,", ").concat(t.g,", ").concat(t.b,", 1.0)")}(a):"",'\n        token inputs:sourceColorSpace = "').concat(t.gammaSpace?"raw":"sRGB",'"\n        token inputs:wrapS = "').concat(g(t.wrapU),'"\n        token inputs:wrapT = "').concat(g(t.wrapV),'"\n        float outputs:r\n        float outputs:g\n        float outputs:b\n        float3 outputs:rgb\n        ').concat(e.needAlphaBlending()?"float outputs:a":"","\n    }")}function y(t,e,n){var a="\t\t\t",o=[],r=[],c=function(t){switch(t.getClassName()){case"StandardMaterial":return{diffuseMap:t.diffuseTexture,diffuse:t.diffuseColor,alphaCutOff:t.alphaCutOff,emissiveMap:t.emissiveTexture,emissive:t.emissiveColor,roughnessMap:null,normalMap:null,metalnessMap:null,roughness:1,metalness:0,aoMap:null,aoMapIntensity:0,alphaMap:t.opacityTexture,ior:1,clearCoat:0,clearCoatMap:null,clearCoatRoughness:0,clearCoatRoughnessMap:null};case"PBRMaterial":return{diffuseMap:t.albedoTexture,diffuse:t.albedoColor,alphaCutOff:t.alphaCutOff,emissiveMap:t.emissiveTexture,emissive:t.emissiveColor,normalMap:t.bumpTexture,roughnessMap:t.metallicTexture,roughnessChannel:t.useRoughnessFromMetallicTextureAlpha?"a":"g",roughness:t.roughness||1,metalnessMap:t.metallicTexture,metalnessChannel:t.useMetallnessFromMetallicTextureBlue?"b":"r",metalness:t.metallic||0,aoMap:t.ambientTexture,aoMapChannel:t.useAmbientInGrayScale?"r":"rgb",aoMapIntensity:t.ambientTextureStrength,alphaMap:t.opacityTexture,ior:t.indexOfRefraction,clearCoat:t.clearCoat.intensity,clearCoatMap:t.clearCoat.texture,clearCoatRoughness:t.clearCoat.roughness,clearCoatRoughnessMap:t.clearCoat.useRoughnessFromMainTexture?t.clearCoat.texture:t.clearCoat.textureRoughness};case"PBRMetallicRoughnessMaterial":return{diffuseMap:t.baseTexture,diffuse:t.baseColor,alphaCutOff:t.alphaCutOff,emissiveMap:t.emissiveTexture,emissive:t.emissiveColor,normalMap:t.normalTexture,roughnessMap:t.metallicTexture,roughnessChannel:t.useRoughnessFromMetallicTextureAlpha?"a":"g",roughness:t.roughness||1,metalnessMap:t.metallicTexture,metalnessChannel:t.useMetallnessFromMetallicTextureBlue?"b":"r",metalness:t.metallic||0,aoMap:t.ambientTexture,aoMapChannel:t.useAmbientInGrayScale?"r":"rgb",aoMapIntensity:t.ambientTextureStrength,alphaMap:t.opacityTexture,ior:t.indexOfRefraction,clearCoat:t.clearCoat.intensity,clearCoatMap:t.clearCoat.texture,clearCoatRoughness:t.clearCoat.roughness,clearCoatRoughnessMap:t.clearCoat.useRoughnessFromMainTexture?t.clearCoat.texture:t.clearCoat.textureRoughness};default:return{diffuseMap:null,diffuse:null,emissiveMap:null,emissemissiveiveColor:null,normalMap:null,roughnessMap:null,metalnessMap:null,alphaCutOff:0,roughness:0,metalness:0,aoMap:null,aoMapIntensity:0,alphaMap:null,ior:1,clearCoat:0,clearCoatMap:null,clearCoatRoughness:0,clearCoatRoughnessMap:null}}}(t),i=c.diffuseMap,u=c.diffuse,l=c.alphaCutOff,p=c.emissiveMap,f=c.emissive,d=c.normalMap,h=c.roughnessMap,m=c.roughnessChannel,g=c.roughness,M=c.metalnessMap,y=c.metalnessChannel,C=c.metalness,b=c.aoMap,T=c.aoMapChannel,_=c.aoMapIntensity,I=c.alphaMap,R=c.ior,S=c.clearCoat,w=c.clearCoatMap,O=c.clearCoatRoughness,A=c.clearCoatRoughnessMap;return null!==i?(o.push("".concat(a,"color3f inputs:diffuseColor.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(i.uniqueId,"_diffuse.outputs:rgb>")),t.needAlphaBlending()?o.push("".concat(a,"float inputs:opacity.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(i.uniqueId,"_diffuse.outputs:a>")):t.needAlphaTesting()&&(o.push("".concat(a,"float inputs:opacity.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(i.uniqueId,"_diffuse.outputs:a>")),o.push("".concat(a,"float inputs:opacityThreshold = ").concat(l))),r.push(v(i,t,"diffuse",u,e,n))):o.push("".concat(a,"color3f inputs:diffuseColor = ").concat(x(u||s.Color3.White()))),null!==p?(o.push("".concat(a,"color3f inputs:emissiveColor.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(p.uniqueId,"_emissive.outputs:rgb>")),r.push(v(p,t,"emissive",f,e,n))):f&&f.toLuminance()>0&&o.push("".concat(a,"color3f inputs:emissiveColor = ").concat(x(f))),null!==d&&(o.push("".concat(a,"normal3f inputs:normal.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(d.uniqueId,"_normal.outputs:rgb>")),r.push(v(d,t,"normal",null,e,n))),null!==b&&(o.push("".concat(a,"float inputs:occlusion.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(b.uniqueId,"_occlusion.outputs:").concat(T,">")),r.push(v(b,t,"occlusion",new s.Color3(_,_,_),e,n))),null!==h?(o.push("".concat(a,"float inputs:roughness.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(h.uniqueId,"_roughness.outputs:").concat(m,">")),r.push(v(h,t,"roughness",new s.Color3(g,g,g),e,n))):o.push("".concat(a,"float inputs:roughness = ").concat(g)),null!==M?(o.push("".concat(a,"float inputs:metallic.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(M.uniqueId,"_metallic.outputs:").concat(y,">")),r.push(v(M,t,"metallic",new s.Color3(C,C,C),e,n))):o.push("".concat(a,"float inputs:metallic = ").concat(C)),null!==I?(o.push("".concat(a,"float inputs:opacity.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(I.uniqueId,"_opacity.outputs:r>")),o.push("".concat(a,"float inputs:opacityThreshold = 0.0001")),r.push(v(I,t,"opacity",null,e,n))):o.push("".concat(a,"float inputs:opacity = ").concat(t.alpha)),null!==w?(o.push("".concat(a,"float inputs:clearcoat.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(w.uniqueId,"_clearcoat.outputs:r>")),r.push(v(w,t,"clearcoat",new s.Color3(S,S,S),e,n))):o.push("".concat(a,"float inputs:clearcoat = ").concat(S)),null!==A?(o.push("".concat(a,"float inputs:clearcoatRoughness.connect = </Materials/Material_").concat(t.uniqueId,"/Texture_").concat(A.uniqueId,"_clearcoatRoughness.outputs:g>")),r.push(v(A,t,"clearcoatRoughness",new s.Color3(O,O,O),e,n))):o.push("".concat(a,"float inputs:clearcoatRoughness = ").concat(O)),o.push("".concat(a,"float inputs:ior = ").concat(R)),'\n\tdef Material "Material_'.concat(t.uniqueId,'"\n\t{\n\t\tdef Shader "PreviewSurface"\n\t\t{\n\t\t\tuniform token info:id = "UsdPreviewSurface"\n').concat(o.join("\n"),"\n\t\t\tint inputs:useSpecularWorkflow = 0\n\t\t\ttoken outputs:surface\n\t\t}\n\n\t\ttoken outputs:surface.connect = </Materials/Material_").concat(t.uniqueId,"/PreviewSurface.outputs:surface>\n\n").concat(r.join("\n"),"\n\n\t}\n")}function C(t,e,n){return a=this,o=void 0,c=function(){var a,o,r,c,u,l,h,g,M,x,v,C,b,T,_,I,R,S,w,O,A,P,q,j,k,E,D,U;return function(t,e){var n,a,o,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]},c=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return c.next=i(0),c.throw=i(1),c.return=i(2),"function"==typeof Symbol&&(c[Symbol.iterator]=function(){return this}),c;function i(i){return function(s){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;c&&(c=0,i[0]&&(r=0)),r;)try{if(n=1,a&&(o=2&i[0]?a.return:i[0]?a.throw||((o=a.return)&&o.call(a),0):a.next)&&!(o=o.call(a,i[1])).done)return o;switch(a=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return r.label++,{value:i[1],done:!1};case 5:r.label++,a=i[1],i=[0];continue;case 7:i=r.ops.pop(),r.trys.pop();continue;default:if(!((o=(o=r.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){r=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){r.label=i[1];break}if(6===i[0]&&r.label<o[1]){r.label=o[1],o=i;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(i);break}o[2]&&r.ops.pop(),r.trys.pop();continue}i=e.call(t,r)}catch(t){i=[6,t],a=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}(this,(function(B){switch(B.label){case 0:return a=i({fflateUrl:"https://unpkg.com/fflate@0.8.2",includeAnchoringProperties:!0,anchoringType:"plane",planeAnchoringAlignment:"horizontal",modelFileName:"model.usda",precision:5,exportCamera:!1,cameraSensorWidth:35},e),"undefined"!=typeof fflate?[3,2]:[4,s.Tools.LoadScriptAsync(a.fflateUrl)];case 1:B.sent(),B.label=2;case 2:for((o={})[a.modelFileName]=null,r='#usda 1.0\n    (\n        customLayerData = {\n            string creator = "Babylon.js USDZExportAsync"\n        }\n        defaultPrim = "Root"\n        metersPerUnit = 1\n        upAxis = "Y"\n    )',r+=function(t){var e=!0===t.includeAnchoringProperties?'\n\t\ttoken preliminary:anchoring:type = "'.concat(t.anchoringType,'"\n\t\ttoken preliminary:planeAnchoring:alignment = "').concat(t.planeAnchoringAlignment,'"'):"";return'def Xform "Root"\n    {\n        def Scope "Scenes" (\n            kind = "sceneLibrary"\n        )\n        {\n            def Xform "Scene" (\n                customData = {\n                    bool preliminary_collidesWithEnvironment = 0\n                    string sceneName = "Scene"\n                }\n                sceneName = "Scene"\n            )\n            {'.concat(e,"\n            ")}(a),c={},u=0,l=t.meshes;u<l.length;u++)0!==(h=l[u]).getTotalVertices()&&(M=(g=h).geometry,(x=g.material)&&M&&(!n||n(g))&&(-1!==["StandardMaterial","PBRMaterial","PBRMetallicRoughnessMaterial"].indexOf(x.getClassName())?((v="geometries/Geometry_"+M.uniqueId+".usda")in o||(C=p(M,a),o[v]=f(C)),x.uniqueId in c||(c[x.uniqueId]=x),r+=m(g)):s.Tools.Warn("USDZExportAsync does not support this material type: "+x.getClassName())));for(I in t.activeCamera&&a.exportCamera&&(r+=function(t,e){var n="Camera_"+t.uniqueId,a=d(s.Matrix.RotationY(Math.PI).multiply(t.getWorldMatrix()));if(t.mode===s.Constants.ORTHOGRAPHIC_CAMERA)return'def Camera "'.concat(n,'"\n\t\t{\n\t\t\tmatrix4d xformOp:transform = ').concat(a,'\n\t\t\tuniform token[] xformOpOrder = ["xformOp:transform"]\n\n\t\t\tfloat2 clippingRange = (').concat(t.minZ.toPrecision(e.precision),", ").concat(t.maxZ.toPrecision(e.precision),")\n\t\t\tfloat horizontalAperture = ").concat((10*(Math.abs(t.orthoLeft||1)+Math.abs(t.orthoRight||1))).toPrecision(e.precision),"\n\t\t\tfloat verticalAperture = ").concat((10*(Math.abs(t.orthoTop||1)+Math.abs(t.orthoBottom||1))).toPrecision(e.precision),'\n\t\t\ttoken projection = "orthographic"\n\t\t}\n\t\n\t');var o=t.getEngine().getAspectRatio(t),r=e.cameraSensorWidth||35;return'def Camera "'.concat(n,'"\n\t\t{\n\t\t\tmatrix4d xformOp:transform = ').concat(a,'\n\t\t\tuniform token[] xformOpOrder = ["xformOp:transform"]\n\n\t\t\tfloat2 clippingRange = (').concat(t.minZ.toPrecision(e.precision),", ").concat(t.maxZ.toPrecision(e.precision),")\n\t\t\tfloat focalLength = ").concat((r/(2*Math.tan(.5*t.fov))).toPrecision(e.precision),'\n            token projection = "perspective"\n\t\t\tfloat horizontalAperture = ').concat((r*o).toPrecision(e.precision),"\n\t\t\tfloat verticalAperture = ").concat((r/o).toPrecision(e.precision),"            \n\t\t}\n\t\n\t")}(t.activeCamera,a)),r+="\n            }\n        }\n    }",r+=function(t,e,n){var a=[];for(var o in t){var r=t[o];a.push(y(r,e,n))}return'\n    def "Materials"\n{\n'.concat(a.join(""),"\n}\n\n")}(c,b={},a),o[a.modelFileName]=fflate.strToU8(r),_=[],T=b)_.push(I);R=0,B.label=3;case 3:return R<_.length?(I=_[R])in T?(w=b[S=I],O=w.getSize(),[4,w.readPixels()]):[3,6]:[3,7];case 4:if(!(A=B.sent()))throw new Error("Texture data is not available");return[4,s.DumpTools.DumpDataAsync(O.width,O.height,A,"image/png",void 0,!1,!0)];case 5:P=B.sent(),o["textures/Texture_".concat(S,".png")]=new Uint8Array(P).slice(),B.label=6;case 6:return R++,[3,3];case 7:for(j in q=0,o)(k=o[j])&&(E=34+j.length,4!=(D=63&(q+=E))&&(U=new Uint8Array(64-D),o[j]=[k,{extra:{12345:U}}]),q=k.length);return[2,fflate.zipSync(o,{level:0})]}}))},new((r=void 0)||(r=Promise))((function(t,e){function n(t){try{s(c.next(t))}catch(t){e(t)}}function i(t){try{s(c.throw(t))}catch(t){e(t)}}function s(e){var a;e.done?t(e.value):(a=e.value,a instanceof r?a:new r((function(t){t(a)}))).then(n,i)}s((c=c.apply(a,o||[])).next())}));var a,o,r,c}var b=void 0!==a.g?a.g:"undefined"!=typeof window?window:void 0;if(void 0!==b)for(var T in r)b.BABYLON[T]=r[T];const _=c;return o.default})()));
//# sourceMappingURL=babylon.usdzSerializer.min.js.map